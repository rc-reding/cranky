params.envs = "${projectDir}/envs"
params.cache = "${projectDir}/condaCache"
params.bin = "${projectDir}/bin"
params.models = "${projectDir}/models"
params.whole_genome = false

conda {
	enabled = true
	useMamba = true
	cacheDir = "${projectDir}/condaCache"
}


profiles {
	standard {
		process {
			executor = 'local'

			withLabel: 'dragonflye' {
				conda = "$params.envs/dragonflye.yml"
			}
			withLabel: 'reference_mapping' {
				conda = "$params.envs/reference_mapping.yml"
			}
			withLabel: 'variant_call' {
				conda = "$params.envs/variant_calling.yml"
			}
			withLabel: 'variant_call_LS' {
				conda = "$params.envs/variant_calling_LS.yml"
			}
			withLabel: 'mlst' {
				conda = "$params.envs/mlst.yml"
			}
			withLabel: 'kraken2' {
				conda = "$params.envs/kraken2.yml"
			}
			withLabel: 'genome_depth' {
				conda = "$params.envs/genome_depth.yml"
			}
			withLabel: 'gen_consensus' {
				conda = "$params.envs/gen_consensus.yml"
			}
			withLabel: 'genome_alignments' {
				conda = "$params.envs/genome_alignments.yml"
			}
			withLabel: 'phylogeny_gubbins' {
				conda = "$params.envs/phylogeny_gubbins.yml"
			}
			withLabel: 'phylogeny' {
				conda = "$params.envs/phylogeny.yml"
			}
			withLabel: 'quality_control' {
				conda = "$params.envs/quality_control.yml"
			}
			withLabel: 'filter_reads' {
				conda = "$params.envs/filter_reads.yml"
			}
		}
	}

	hpc {
		executor {
			name = 'slurm'
			queueSize = 100
			queue = 'short'
		}

		process {
			withLabel: 'dragonflye' {
				conda = "$params.envs/dragonflye.yml"
			}
			withLabel: 'reference_mapping' {
				conda = "$params.envs/reference_mapping.yml"
			}
			withLabel: 'variant_call' {
				conda = "$params.envs/variant_calling.yml"
			}
			withLabel: 'variant_call_LS' {
				conda = "$params.envs/variant_calling_LS.yml"
			}
			withLabel: 'mlst' {
				conda = "$params.envs/mlst.yml"
			}
			withLabel: 'kraken2' {
				conda = "$params.envs/kraken2.yml"
			}
			withLabel: 'genome_depth' {
				conda = "$params.envs/genome_depth.yml"
			}
			withLabel: 'gen_consensus' {
				conda = "$params.envs/gen_consensus.yml"
			}
			withLabel: 'genome_alignments' {
				conda = "$params.envs/genome_alignments.yml"
			}
			withLabel: 'phylogeny_gubbins' {
				conda = "$params.envs/phylogeny_gubbins.yml"
			}
			withLabel: 'phylogeny' {
				conda = "$params.envs/phylogeny.yml"
			}
			withLabel: 'quality_control' {
				conda = "$params.envs/quality_control.yml"
			}
			withLabel: 'filter_reads' {
				conda = "$params.envs/filter_reads.yml"
			}
		}
	}
}

